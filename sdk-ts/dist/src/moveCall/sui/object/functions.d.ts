import { GenericArg, ObjectArg, Type } from '../../_framework/util';
import { TransactionArgument, TransactionBlock } from '@mysten/sui.js/transactions';
export declare function new_(txb: TransactionBlock): import("@mysten/sui.js/transactions").TransactionResult;
export declare function id(txb: TransactionBlock, typeArg: Type, obj: GenericArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function authenticatorState(txb: TransactionBlock): import("@mysten/sui.js/transactions").TransactionResult;
export declare function borrowId(txb: TransactionBlock, typeArg: Type, obj: GenericArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function borrowUid(txb: TransactionBlock, typeArg: Type, obj: GenericArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function clock(txb: TransactionBlock): import("@mysten/sui.js/transactions").TransactionResult;
export declare function delete_(txb: TransactionBlock, id: ObjectArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function deleteImpl(txb: TransactionBlock, id: string | TransactionArgument): import("@mysten/sui.js/transactions").TransactionResult;
export declare function idAddress(txb: TransactionBlock, typeArg: Type, obj: GenericArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function idBytes(txb: TransactionBlock, typeArg: Type, obj: GenericArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function idFromAddress(txb: TransactionBlock, bytes: string | TransactionArgument): import("@mysten/sui.js/transactions").TransactionResult;
export declare function idFromBytes(txb: TransactionBlock, bytes: Array<number | TransactionArgument> | TransactionArgument): import("@mysten/sui.js/transactions").TransactionResult;
export declare function idToAddress(txb: TransactionBlock, id: string | TransactionArgument): import("@mysten/sui.js/transactions").TransactionResult;
export declare function idToBytes(txb: TransactionBlock, id: string | TransactionArgument): import("@mysten/sui.js/transactions").TransactionResult;
export declare function newUidFromHash(txb: TransactionBlock, bytes: string | TransactionArgument): import("@mysten/sui.js/transactions").TransactionResult;
export declare function randomnessState(txb: TransactionBlock): import("@mysten/sui.js/transactions").TransactionResult;
export declare function recordNewUid(txb: TransactionBlock, id: string | TransactionArgument): import("@mysten/sui.js/transactions").TransactionResult;
export declare function suiSystemState(txb: TransactionBlock): import("@mysten/sui.js/transactions").TransactionResult;
export declare function uidAsInner(txb: TransactionBlock, uid: ObjectArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function uidToAddress(txb: TransactionBlock, uid: ObjectArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function uidToBytes(txb: TransactionBlock, uid: ObjectArg): import("@mysten/sui.js/transactions").TransactionResult;
export declare function uidToInner(txb: TransactionBlock, uid: ObjectArg): import("@mysten/sui.js/transactions").TransactionResult;
